#include<stdio.h>
void mergeSort(int arr[],int l,int mid,int r);
void mergesort(int arr[],int l,int r){
    if(l < r){
        int mid = l+(r-l)/2;
        mergesort(arr,l,mid);
        mergesort(arr,mid+1,r);
        mergeSort(arr,l,mid,r);
    }
}
void mergeSort(int arr[],int l,int mid,int r){
    int i = l;
    int j = mid+1;
    int k = l;
    int b[r+1];
    while(i<=mid && j<=r){
        if(arr[i] < arr[j]){
           b[k] = arr[i];
           i++;
        }else{
            b[k] = arr[j];
            j++;
        }
        k++;
    }
    if(i>mid){
        while(j<=r){
            b[k] = arr[j];
            k++;
            j++;
        }
    }else{
        while(i<=mid){
            b[k] = arr[i];
            k++;
            i++;
        }
    }
    for(int k=l; k<=r; k++){
        arr[k] = b[k]; 
    }
}
int main(){
    int arr[] = {2,7,3,9,4,6};
    int n = sizeof(arr) / sizeof(arr[0]);
    mergesort(arr,0,n-1);
    for(int i=0; i<n;i++){
        printf("%d ",arr[i]);
    }

    return 0;
}
